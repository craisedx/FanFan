@{ ViewData["Title"] = "Вход"; }
@model FanFan.Models.LoginModel
@{ var emailerror = TempData["EmailError"] as string;
                var activestatuserror = TempData["UserStateNoActive"] as string; }
<div class="container mt-5">
    <div class="row bg-secondary shadow p-3 mb-5 bg-white rounded m-2">
        <div class="col-6 col-md-4">
            <h2 class="display-5">Вход на сайт</h2>
            @if (!string.IsNullOrEmpty(emailerror))
            {
<h2 class="alert-danger" style="padding:20px">@emailerror</h2>}
            @if (!string.IsNullOrEmpty(activestatuserror))
            {
<h2 class="alert-danger" style="padding:20px">@activestatuserror</h2>}
            <a asp-action="Register" asp-controller="Account" class="">Регистрация</a>

            <form method="post" asp-action="Login" asp-controller="Account" asp-anti-forgery="true">
                <div class="validation" asp-validation-summary="ModelOnly"></div>
                <div class="form-group">
                    <label asp-for="UserName">Имя</label>
                    <input type="text" class="form-control" aria-describedby="emailHelp" name="UserName" placeholder="Введите имя">
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label asp-for="Password">Пароль</label>
                    <input type="password" class="form-control" aria-describedby="emailHelp" name="Password" placeholder="Введите пароль">
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
                @Html.ValidationMessage("CheckLogin", new { @class = "text-danger" })
                <input type="submit" class="btn btn-primary" value="Войти" />
            </form>
        </div>
    </div>
</div>